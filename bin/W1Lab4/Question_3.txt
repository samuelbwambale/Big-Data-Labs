QUESTION 3
Assume that there are two input spits and two reducers. Note that Mapper 1 and Reducer 1 run on the same machine. Mapper 2 and Reducer 2 run on the same machine.

Further, let the partitioner  assign all words less than letter â€˜kâ€™ to Reducer 1 and  everything else to Reducer 2.

Input Split 1 : [ {cat mat rat, cat}, {cat  bat cat pat},{cat bat rat bat}]    (Note : 3 records)

Input Split 2 : [{cat rat bat rat}, {bat mat pat bat}, {pat cat bat mat}]    (Note: 3 records)

Let the neighborhood of X, N(X) be set of all term after X and before the next X.

Example: Let Data block be [a b c a d e]
N(a) = {b, c}, N(b) = {c, a, d, e}, N(c) = {a, d, e}, N(a) ={d, e}, N(d) = {e}, N(e) = {}.

........................Pair approach............................
Mapper 1 Input
[ {cat mat rat, cat}, {cat  bat cat pat},{cat bat rat bat}]

Mapper 2 Input
[{cat rat bat rat}, {bat mat pat bat}, {pat cat bat mat}]

Mapper 1 Output
((cat, mat), 1)
((cat, rat), 1)
((mat, rat), 1)
((mat, cat), 1)
((rat, cat), 1)
((cat, bat), 1)
((bat, cat), 1)
((bat, pat), 1)
((cat, pat), 1)
((cat, bat), 1)
((cat, rat), 1)
((cat, bat), 1)
((bat, rat), 1)
((rat, bat), 1)

Mapper 2 Output
((cat, rat), 1)
((cat, bat), 1)
((cat, rat), 1)
((rat, bat), 1)
((bat, rat), 1)
((bat, mat), 1)
((bat, pat), 1)
((mat, pat), 1)
((mat, bat), 1)
((pat, bat), 1)
((pat, cat), 1)
((pat, bat), 1)
((pat, mat), 1)
((cat, bat), 1)
((cat, mat), 1)
((bat, mat), 1)

Pairs sent from Mapper 1 to Reducer 1
((cat, mat), 1)
((cat, rat), 1)
((cat, bat), 1)
((bat, cat), 1)
((bat, pat), 1)
((cat, pat), 1)
((cat, bat), 1)
((cat, rat), 1)
((cat, bat), 1)
((bat, rat), 1)
Pairs sent from Mapper 1 to Reducer 2
((mat, rat), 1)
((mat, cat), 1)
((rat, cat), 1)
((rat, bat), 1)
Pairs sent from Mapper 2 to Reducer 1
((cat, rat), 1)
((cat, bat), 1)
((cat, rat), 1)
((bat, rat), 1)
((bat, mat), 1)
((bat, pat), 1)
((cat, bat), 1)
((cat, mat), 1)
((bat, mat), 1)
Pairs sent from Mapper 2 to Reducer 2
((rat, bat), 1)
((mat, pat), 1)
((mat, bat), 1)
((pat, bat), 1)
((pat, cat), 1)
((pat, bat), 1)
((pat, mat), 1)

Reducer 1 Input
((cat, mat), [1, 1])
((cat, rat), [1, 1, 1, 1])
((cat, bat), [1, 1, 1, 1, 1])
((bat, cat), [1])
((bat, pat), [1, 1])
((cat, pat), [1])
((bat, rat), [1, 1])
((bat, mat), [1, 1])

Reducer 2 Input
((mat, rat), [1])
((mat, cat), [1])
((rat, cat), [1])
((rat, bat), [1, 1])
((mat, pat), [1])
((mat, bat), [1])
((pat, bat), [1])
((pat, cat), [1])
((pat, bat), [1])
((pat, mat), [1])

Reducer 1 Output
((cat, mat), 2)
((cat, rat), 4)
((cat, bat), 5)
((bat, cat), 1)
((bat, pat), 2)
((cat, pat), 1)
((bat, rat), 2)
((bat, mat), 2)

Reducer 2 Output
((mat, rat), 1)
((mat, cat), 1)
((rat, cat), 1)
((rat, rat), 1)
((rat, bat), 2)
((mat, pat), 1)
((mat, bat), 1)
((pat, bat), 1)
((pat, cat), 1)
((pat, bat), 1)
((pat, mat), 1)

........................Pair Approach with In-Mapper Combining............................

Mapper 1 Input
[ {cat mat rat, cat}, {cat  bat cat pat},{cat bat rat bat}]

Mapper 2 Input
[{cat rat bat rat}, {bat mat pat bat}, {pat cat bat mat}]

Mapper 1 Output
((cat, mat), 1)
((cat, rat), 2)
((mat, rat), 1)
((mat, cat), 1)
((rat, cat), 1)
((cat, bat), 3)
((bat, cat), 1)
((bat, pat), 1)
((cat, pat), 1)
((bat, rat), 1)
((rat, bat), 1)

Mapper 2 Output
((cat, rat), 2)
((cat, bat), 2)
((rat, bat), 1)
((bat, rat), 1)
((bat, mat), 2)
((bat, pat), 1)
((mat, pat), 1)
((mat, bat), 1)
((pat, bat), 2)
((pat, cat), 1)
((pat, mat), 1)
((cat, mat), 1)

Pairs sent from Mapper 1 to Reducer 1
((cat, mat), 1)
((cat, rat), 2)
((cat, bat), 3)
((bat, cat), 1)
((bat, pat), 1)
((cat, pat), 1)
((bat, rat), 1)

Pairs sent from Mapper 1 to Reducer 2
((mat, rat), 1)
((mat, cat), 1)
((rat, cat), 1)
((rat, bat), 1)

Pairs sent from Mapper 2 to Reducer 1
((cat, rat), 2)
((cat, bat), 2)
((bat, rat), 1)
((bat, mat), 2)
((bat, pat), 1)
((cat, mat), 1)

Pairs sent from Mapper 2 to Reducer 2
((rat, bat), 1)
((mat, pat), 1)
((mat, bat), 1)
((pat, bat), 2)
((pat, cat), 1)
((pat, mat), 1)

Reducer 1 Input
((cat, mat), [1, 1])
((cat, rat), [2, 2])
((cat, bat), [3, 2])
((bat, cat), [1])
((bat, pat), [1, 1])
((cat, pat), [1])
((bat, rat), [1, 1])
((bat, mat), [2])

Reducer 2 Input
((mat, rat), [1])
((mat, cat), [1])
((rat, cat), [1])
((rat, bat), [1, 1])
((mat, pat), [1])
((mat, bat), [1])
((pat, bat), [2])
((pat, cat), [1])
((pat, mat), [1])

Reducer 1 Output
((cat, mat), 2)
((cat, rat), 4)
((cat, bat), 5)
((bat, cat), 1)
((bat, pat), 2)
((cat, pat), 1)
((bat, rat), 2)
((bat, mat), 2)

Reducer 2 Output
((mat, rat), 1)
((mat, cat), 1)
((rat, cat), 1)
((rat, rat), 1)
((rat, bat), 2)
((mat, pat), 1)
((mat, bat), 1)
((pat, bat), 2)
((pat, cat), 1)
((pat, mat), 1)

........................Stripe Approach............................

Mapper 1 Input
[ {cat mat rat, cat}, {cat  bat cat pat},{cat bat rat bat}]

Mapper 2 Input
[{cat rat bat rat}, {bat mat pat bat}, {pat cat bat mat}]

Mapper 1 Output
(cat, [mat: 1, rat: 1])
(mat, [rat: 1, cat: 1])
(rat, [cat: 1])

(cat, [bat: 1])
(bat, [cat: 1, pat: 1])
(cat, [pat: 1])

(cat, [bat: 2, rat: 1])
(bat, [rat: 1])
(rat, [bat: 1])

Mapper 2 Output
(cat, [rat: 2, bat: 1])
(rat, [bat: 1])
(bat, [rat: 1])

(bat, [mat: 1, pat: 1])
(mat, [pat: 1, bat: 1])
(pat, [bat: 1])

(pat, [cat: 1, bat: 1, mat: 1])
(cat, [bat: 1, mat: 1])
(bat, [mat: 1])

Pairs sent from Mapper 1 to Reducer 1
(cat, [mat: 1, rat: 1])
(cat, [bat: 1])
(bat, [cat: 1, pat: 1])
(cat, [pat: 1])
(cat, [bat: 2, rat: 1])
(bat, [rat: 1])

Pairs sent from Mapper 1 to Reducer 2
(mat, [rat: 1, cat: 1])
(rat, [cat: 1])
(rat, [bat: 1])

Pairs sent from Mapper 2 to Reducer 1
(cat, [rat: 2, bat: 1])
(bat, [rat: 1])
(bat, [mat: 1, pat: 1])
(cat, [bat: 1, mat: 1])
(bat, [mat: 1])

Pairs sent from Mapper 2 to Reducer 2
(rat, [bat: 1])
(mat, [pat: 1, bat: 1])
(pat, [bat: 1])
(pat, [cat: 1, bat: 1, mat: 1])

Reducer 1 Input
(cat, [[mat: 1, rat: 1], [bat: 1], [bat: 2, rat: 1], [rat: 2, bat: 1], [bat: 1, mat: 1]])
(bat, [[cat: 1, pat: 1], [rat: 1], [rat: 1], [mat: 1, pat: 1], [mat: 1]])

Reducer 2 Input
(mat, [[rat: 1, cat: 1], [pat: 1, bat: 1]])
(rat, [[cat: 1], [bat: 1], [bat: 1]])
(pat, [[bat: 1], [cat: 1, bat: 1, mat: 1]])

Reducer 1 Output
(cat, [mat: 2, rat: 4, bat: 5])
(bat, [cat: 1, pat: 2, rat: 2, mat: 2])

Reducer 2 Output
(mat, [rat: 1, cat: 1, pat: 1, bat: 1])
(rat, [cat: 1, bat: 2])
(pat, [bat: 2, cat: 1, mat: 1])


........................Stripe Approach with In-Mapper Combining............................
Mapper 1 Input
[ {cat mat rat, cat}, {cat  bat cat pat},{cat bat rat bat}]
Mapper 2 Input
[{cat rat bat rat}, {bat mat pat bat}, {pat cat bat mat}]

Mapper 1 Output
(cat, [mat: 1, rat: 2, bat: 3, pat: 1])
(mat, [rat: 1, cat: 1])
(rat, [cat: 1, bat: 1])
(bat, [cat: 1, pat: 1, rat: 1])

Mapper 2 Output
(cat, [rat: 2, bat: 2, mat: 1])
(rat, [bat: 1])
(bat, [rat: 1, mat: 2, pat: 1])
(mat, [pat: 1, bat: 1])
(pat, [bat: 2, cat: 1, mat: 1])

Pairs sent from Mapper 1 to Reducer 1
(cat, [mat: 1, rat: 2, bat: 3, pat: 1])
(bat, [cat: 1, pat: 1, rat: 1])

Pairs sent from Mapper 1 to Reducer 2
(mat, [rat: 1, cat: 1])
(rat, [cat: 1, bat: 1])

Pairs sent from Mapper 2 to Reducer 1
(cat, [rat: 2, bat: 2, mat: 1])
(bat, [rat: 1, mat: 2, pat: 1])

Pairs sent from Mapper 2 to Reducer 2
(rat, [bat: 1])
(mat, [pat: 1, bat: 1])
(pat, [bat: 2, cat: 1, mat: 1])

Reducer 1 Input
(cat, [[mat: 1, rat: 2, bat: 3, pat: 1], [rat: 2, bat: 2, mat: 1]])
(bat, [[cat: 1, pat: 1, rat: 1], [rat: 1, mat: 2, pat: 1]])

Reducer 2 Input
(mat, [[rat: 1, cat: 1], [pat: 1, bat: 1]])
(rat, [[cat: 1, bat: 1], [bat: 1]])
(pat, [[bat: 2, cat: 1, mat: 1]])

Reducer 1 Output
(cat, [mat: 2, rat: 4, bat: 5])
(bat, [cat: 1, pat: 2, rat: 2, mat: 2])

Reducer 2 Output
(mat, [rat: 1, cat: 1], [pat: 1, bat: 1])
(rat, [cat: 1, bat: 2])
(pat, [bat: 2, cat: 1, mat: 1])
